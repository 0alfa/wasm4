#!/usr/bin/env node

const memory = {
    _PAD_START: 4,

    PALETTE: 4*4,
    DRAW_COLORS: 2,
    // CLIP_X: 1,
    // CLIP_Y: 1,
    // CLIP_WIDTH: 1,
    // CLIP_HEIGHT: 1,

    GAMEPAD1: 1,
    GAMEPAD2: 1,
    GAMEPAD3: 1,
    GAMEPAD4: 1,
    MOUSE_X: 1,
    MOUSE_Y: 1,
    MOUSE_BUTTONS: 1,

    _RESERVED: 131,

    // Framebuffer should be 64 bit aligned
    FRAMEBUFFER: 160*160 >> 2,
};

const cTypes = {
    PALETTE: "unsigned int",
    DRAW_COLORS: "unsigned short",
    FRAMEBUFFER: "unsigned char",
};

function generate (fn) {
    let p = 0;
    for (let name in memory) {
        if (!name.startsWith("_")) {
            const addr = `0x${p.toString(16).padStart(2, "0")}`;
            console.log(fn(name, addr));
        }
        p += memory[name];
    }
    console.log();
}

// Runtime constants.js
generate((name, addr) => `export const ADDR_${name} = ${addr};`);

// C
generate((name, addr) => `#define ${name} ((${cTypes[name] || "const unsigned char"}*)${addr})`);

// AssemblyScript
generate((name, addr) => `export const ${name} = ${addr};`);

// Rust
generate((name, addr) => `pub const ${name}: Register<u8> = Register::new(${addr});`);

var sum = 0;
for (let name in memory) {
    sum += memory[name];
}
console.log("--global-base="+sum);
