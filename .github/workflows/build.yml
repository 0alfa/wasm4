name: Build
on: [push, pull_request]

jobs:
    build-native-runtime:
        strategy:
            fail-fast: false
            matrix:
                config:
                    - os: windows-latest
                      artifact: "runtime-windows"
                      executable: runtimes/native/instdir/bin/wasm4.exe

                    - os: macos-latest
                      artifact: "runtime-mac"
                      executable: runtimes/native/instdir/bin/wasm4

                    - os: ubuntu-latest
                      artifact: "runtime-linux"
                      executable: runtimes/native/instdir/bin/wasm4

        name: Build ${{ matrix.config.artifact }}
        runs-on: ${{ matrix.config.os }}
        defaults:
             run:
                 working-directory: runtimes/native

        steps:
            - uses: actions/checkout@v2

            - if: matrix.config.os == 'ubuntu-latest'
              name: Install local dependencies
              run: |
                  sudo apt update
                  sudo apt install libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libxext-dev

            - name: Get vendor dependencies
              run: git submodule update --init

            - name: Build
              run: |
                  cmake -B build -DCMAKE_BUILD_TYPE=Release
                  cmake --build build --config Release

            - name: Install
              run: cmake --install build --prefix instdir --config Release --strip

            - name: Upload artifact
              uses: actions/upload-artifact@v2
              with:
                  path: ${{ matrix.config.executable }}
                  name: ${{ matrix.config.artifact }}

    build-cli:
        name: Build w4 CLI
        runs-on: ubuntu-latest
        needs: build-native-runtime
        defaults:
            run:
                working-directory: cli

        steps:
            - uses: actions/checkout@v2

            - name: Build web runtime
              working-directory: runtimes/web
              run: |
                  npm ci
                  npm run build

            - name: Import web runtime
              run: |
                  rm -f assets/runtime
                  cp -r ../runtimes/web/dist assets/runtime

            - name: Download artifacts
              uses: actions/download-artifact@v2
              with:
                  path: artifacts

            - name: Import native runtimes
              run: |
                  mkdir -p assets/natives
                  ls -R ../artifacts
                  mv ../artifacts/runtime-windows/wasm4.exe assets/natives/wasm4-windows.exe
                  mv ../artifacts/runtime-mac/wasm4 assets/natives/wasm4-mac
                  mv ../artifacts/runtime-linux/wasm4 assets/natives/wasm4-linux

            - name: Build CLI
              run: |
                  npm ci
                  npm install -g pkg
                  pkg --debug --compress GZip --out-path ../pkgdir --targets node12-win,node12-mac,node12-linux .

            - name: Upload artifact
              uses: actions/upload-artifact@v2
              with:
                  path: pkgdir
                  name: w4

    # release:
    #     if: startsWith(github.ref, "refs/tags/v")
    #     runs-on: ubuntu-latest
    #     needs: [build-web-runtime, build-native-runtime]

    #     steps:
    #         - name: Package release
    #           run: |
    #               rm -rf cli/runtime
    #               cp -r runtimes/web/dist cli/runtime
    #               cp README.md LICENSE.txt cli

    #         - name: Deploy Standalone
    #           run: |
    #               npm install -g pkg
    #               pkg --compress GZip --out-path build --targets node12-win,node12-mac,node12-linux
    #               mkdir build/wasm4-${GITHUB_REF#refs/tags/}-{windows,macos,linux}
    #               mv build/wasm4-${GITHUB_REF#refs/tags/}-windows

    #         - name: Deploy NPM
    #           run: echo npm publish cli --dry-run

    #         - name: Deploy Github
    #           uses: softprops/action-gh-release@v1
